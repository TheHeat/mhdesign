---
import { Image } from 'astro:assets';
import Layout from '../../layouts/Home.astro';

import { getCollection } from 'astro:content';
export async function getStaticPaths() {
  const projectEntries = await getCollection('projects');
  return projectEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();

---

<Layout title={entry.data.title}>

  <main>

    <div class="posterBox">
      <Image inferSize={true} class='poster' src={entry.data.image.path} alt="featured"/>
    </div>

    <div class="content">
      <Content />
      
      
      <table>
        <tr>
          <th>Client</th>
          
          
          <td>{entry.data.client}</td>
        </tr>
        <tr>
          
          <th>Date</th>
          <td>{entry.data.date}</td>
        </tr>
      </table>
    </div>
  </main>
</Layout>


<style>

main{
  padding: var(--length-l);

}
.posterBox{
  display: flex;
  justify-content: center;
  background-color: rgba(0,0,0,0.1);
  transition: .2s;

  opacity: 0.8;
  background-image:  linear-gradient(var(--color-surface) 2px, transparent 2px), linear-gradient(90deg, var(--color-surface) 2px, transparent 2px), linear-gradient(var(--color-surface) 1px, transparent 1px), linear-gradient(90deg, var(--color-surface) 1px, #d3bebe 1px);
  background-size: 50px 50px, 50px 50px, 10px 10px, 10px 10px;
background-position: center;
padding: var(--length-m);
  @container (width > 60ch) {
    padding: var(--length-l);
  }
}
.poster{
  aspect-ratio: 210/297;
  width: auto;
  height: auto;
  max-height: 75svh;
  max-width: 100%;
  border: solid var(--length-m) white;
  border-radius: .1em;
    @container (width > 70ch) {
      box-shadow: 0 0 .5em  rgba(0,0,0,0.1);;
    }
}

.content{
  max-width: 70ch;
  margin: auto;
}

  table{
    font-family: monospace;
    font-size: smaller;
    width: 100%;
    text-align: left;
    border-collapse: collapse;
          border: solid;

  }
  th, td{
       padding: .5em;
  }

  tr:nth-child(1n + 2)  {th,  td{
      border-top: solid;
 
    }}
  th{
    font-weight: normal;
    text-transform: uppercase;
    width: 4rem;
    border-right: solid;
  }

</style>