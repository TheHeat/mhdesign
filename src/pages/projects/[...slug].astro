---
import { Image } from 'astro:assets';
import Layout from '../../layouts/Home.astro';

import { getCollection } from 'astro:content';
import ProjectMeta from '../../components/ProjectMeta.astro';
export async function getStaticPaths() {
  const projectEntries = await getCollection('projects');
  return projectEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();
const image = entry.data.image
---

<Layout title={entry.data.title} description={entry.data.excerpt}>

  <main>
  <div class="posterBox">
    <Image 
      src={image.src} 
      loading='eager'
      inferSize
      class='poster' 
      alt="featured"/>
  </div>
  
  
  <Content />
      
      
<ProjectMeta date={entry.data.date} client={entry.data.client} />
  </main>
</Layout>


<style is:global>

main{
  --inline-padding: var(--length-m);
	--content-width: 60ch;
  --breakout-width: 10ch;

  padding-block-end: var(--length-l);
  
  display: grid;
	grid-template-columns:
		[full-width-start]
    minmax(var(--inline-padding), 1fr)
    [breakout-start]
    minmax(0, var(--breakout-width))
		[content-start] min((100% - var(--inline-padding) * 2), var(--content-width)) [content-end]
     minmax(0, var(--breakout-width))
     [breakout-end]
		minmax(var(--inline-padding), 1fr) [full-width-end];
}

.posterBox{
  grid-column: full-width;
  display: flex;
  justify-content: center;
  background-color: rgba(0,0,0,0.1);
  transition: .2s;

  opacity: 0.8;
  background-image:  linear-gradient(var(--color-surface) 2px, transparent 2px), linear-gradient(90deg, var(--color-surface) 2px, transparent 2px), linear-gradient(var(--color-surface) 1px, transparent 1px), linear-gradient(90deg, var(--color-surface) 1px, #d3bebe 1px);
  background-size: 50px 50px, 50px 50px, 10px 10px, 10px 10px;
background-position: center;
background-attachment: fixed;
padding: var(--length-m);
  @container (width > 60ch) {
    padding: var(--length-l);
  }
}
.poster{
  aspect-ratio: 210/297;
  width: auto;
  height: auto;
  max-height: 75svh;
  max-width: 100%;
  border: solid var(--length-m) white;
  border-radius: .1em;
    @container (width > 70ch) {
      box-shadow: 0 0 .5em  rgba(0,0,0,0.1);;
    }
}


main > *{
  grid-column: content;
}


main > .video,
main > .lite-youtube, 
main > .body-image {
  grid-column: breakout;
}

</style>